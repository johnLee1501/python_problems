"""
Django settings for polaris_cloud_monitoreo project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os

from polaris.common.profiles import Profiles

# configuration = Profiles()
# configuration.get_env()
# params = configuration.CONFIG
# # Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-l6%un#8gbu!&cqz^i8ckwjphxe6e)05n^$mi5@c4k44tbkr&mf'

# DEBUG = params.get('debug')
DEBUG = True
# GATEWAY_PATH = params.get('api_gateway')
# PATH_CONTEXT = params.get('path_context')

SERVER_PORT = 8010
# SWAGGER_URL = params.get('swagger_url', None)
SWAGGER_URL = None
CUSTOM_SWAGGER = {
    # 'BASE_PATH': f'/{PATH_CONTEXT}'
    'BASE_PATH': f'/'
}

ALLOWED_HOSTS = ['*']

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'DRF Token': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    },
    'USE_SESSION_AUTH': False
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
            'propagate': False,
        },
    },
}

# Application definition

INSTALLED_APPS = [
    'django_cassandra_engine',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'drf_yasg',
    'monitoreo',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
    ],
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    'EXCEPTION_HANDLER': 'polaris.common.exception_handler.custom_exception_handler',
    'DEFAULT_PAGINATION_CLASS': 'polaris.common.paginators.CustomPagination',
    'PAGE_SIZE': 20
}

CASSANDRA_FALLBACK_ORDER_BY_PYTHON = True

CORS_ALLOW_ALL_ORIGINS = True

ROOT_URLCONF = 'polaris_cloud_monitoreo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'polaris_cloud_monitoreo.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django_cassandra_engine',
#         'NAME': params.get('name_database'),
#         'USER': params.get('user_database'),
#         'PASSWORD': params.get('password_database'),
#         'TEST_NAME': 'test_db',
#         'HOST': params.get('host_database'),
#         'OPTIONS': {
#             'replication': {
#                 'strategy_class': 'SimpleStrategy',
#                 'replication_factor': 1
#             }
#         }
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django_cassandra_engine',
        'NAME': 'monitoreo_general',
        'TEST_NAME': 'test_db',
        'HOST': '127.0.0.1',
        'OPTIONS': {
            'replication': {
                'strategy_class': 'SimpleStrategy',
                'replication_factor': 1
            }
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'es-es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# STATIC_URL = params.get('static_url', '/static/')
STATIC_URL = '/static/'
